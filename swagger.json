{
    "x-generator": "NSwag v13.7.0.0 (NJsonSchema v10.1.24.0 (Newtonsoft.Json v12.0.0.0))",
    "openapi": "3.0.0",
    "info": {
        "title": "SeptaPay API",
        "version": "v1"
    },
    "servers": [
        {
            "url": "http://94.182.181.229:8090"
        }
    ],
    "paths": {
        "/Account": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get user accounts\n[Or get sub user authorized accounts]",
                "operationId": "Account_Get",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountSummaryWithBalanceQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Create a new account.\n[Feature is not allowed for sub users]",
                "operationId": "Account_CreateAccount",
                "requestBody": {
                    "x-name": "accountInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountSummaryWithBalanceQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{id}": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get user account detail [Feature is not allowed for sub users]",
                "operationId": "Account_GetDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User account id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDetailQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Edit user account\n[Feature is not allowed for sub users]\n[Needs secure login]",
                "operationId": "Account_UpdateAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "accountInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountSummaryWithBalanceQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{id}/notification": {
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Edit user account notification status\n[Feature is not allowed for sub users]\n[Needs secure login]",
                "operationId": "Account_SetNotificationStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Account Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountNotificationStatusInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{id}/balance": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get user account balance",
                "operationId": "Account_GetBalance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountBalanceSummaryQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{accountId}/PermittedSubUsers": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_GetAccountPermittedSubUsers",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountPermittedSubUserQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{id}/charge": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Create a new account charge request",
                "operationId": "Account_NewChargeRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "newChargeRequestInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewChargeRequestInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewChargeRequestResultQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{id}/epayRequest/comission": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get comission amount for epay request amount",
                "operationId": "Account_GetEpayRequestCommissionAmount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommissionApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{id}/epayRequest": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Create a new epay request",
                "operationId": "Account_NewEpayRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User account id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewEpayRequestInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewEpayRequestResultQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{id}/settlementRequest/comission": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get comission amount for settlement request amount",
                "operationId": "Account_GetSettlementRequestComissionAmount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommissionApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{id}/settlementRequest": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Create a new settlement request\n[Needs secure login]",
                "operationId": "Account_NewSettlementRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "newSettlementRequestInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewSettlementRequestInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettlementRequestQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/search": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get insensitive data of account owner",
                "operationId": "Account_Search",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "customerNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "accountNumber",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "contact",
                        "in": "query",
                        "description": "Phone number or email address",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 5
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsensitiveAccountApiModel"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{id}/transferMoney/commission": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get comission amount for transfer money amount",
                "operationId": "Account_GetTransferMoneyCommissionAmount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommissionApiModel"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Account/{id}/transferMoney": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Transfer money",
                "operationId": "Account_TransferMoney",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "transferMoneyInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferMoneyInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferMoneyApiModel"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Auth/apilogin": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "SiginIn using ApiKey and SecretKey",
                "operationId": "Auth_ApiKeyLogin",
                "parameters": [
                    {
                        "name": "terminalId",
                        "in": "header",
                        "description": "Access key",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "description": "ApiKey and SecretKey",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiLoginInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "Authroize [User] with ApiKey and SecretKey (Method2)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewTokenResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in and get a new long-lived JWT",
                "operationId": "Auth_PasswordLogin",
                "parameters": [
                    {
                        "name": "terminalId",
                        "in": "header",
                        "description": "Access Key",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "loginInput",
                    "description": "Username and Password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewTokenResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/login/otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "Auth_OneTimePasswordLogin",
                "parameters": [
                    {
                        "name": "terminalId",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "loginInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TotpLoginInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewTokenResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/login/otp/generate": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "Auth_GenerateOneTimePassword",
                "parameters": [
                    {
                        "name": "terminalId",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "requestTotpInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestTotpInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/login/subuser": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in as a sub user (JWT)",
                "operationId": "Auth_SubUserLogin",
                "requestBody": {
                    "x-name": "subUserLoginInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubUserLoginInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewTokenResult"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Auth/login/security": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get a new short-lived JWT, using current long-lived one",
                "operationId": "Auth_GetSecurityToken",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SecureLoginInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewTokenResult"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Auth/login/security/refresh": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh the short-lived JWT, using current short-lived one",
                "operationId": "Auth_RefreshSecurityToken",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewTokenResult"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Auth/check": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Check the data that the user has been logged in",
                "operationId": "Auth_CheckUsernameAndPassword",
                "requestBody": {
                    "x-name": "loginInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out",
                "operationId": "Auth_Logout",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user with the phone number (Two factor authentication)",
                "operationId": "Auth_Register",
                "parameters": [
                    {
                        "name": "terminalId",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "terminalVersion",
                        "in": "header",
                        "description": "Client version code",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "terminalLanguage",
                        "in": "header",
                        "schema": {
                            "nullable": true,
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/LanguageType"
                                }
                            ]
                        },
                        "x-position": 3
                    },
                    {
                        "name": "terminalPlatformType",
                        "in": "header",
                        "schema": {
                            "nullable": true,
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/OsPlatformType"
                                }
                            ]
                        },
                        "x-position": 4
                    }
                ],
                "requestBody": {
                    "x-name": "registerInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 5
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterNewUserQuery"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/register/verify": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Confirm the phone number with verification code",
                "operationId": "Auth_ConfirmPhoneNumber",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmPhoneNumberOrEmailInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfirmPhoneNumberQuery"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/register/poslogin": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Confirm phone number with the given token and auto signin user to app.",
                "operationId": "Auth_VerifyPhoneAndSingIn",
                "parameters": [
                    {
                        "name": "terminalId",
                        "in": "header",
                        "description": "Add TerminalId in header",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "description": "UserId and verify phone number token",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmPhoneNumberOrEmailInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "Returns Login token and sigin in user automatically",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewTokenResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/register/basic": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Set basic data for your registration [fullname, password]",
                "operationId": "Auth_SetUserBasicInfo",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetUserBasicInfoInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/forgetPassword": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Recover forgotten password with phone number (Two factor authentication)",
                "operationId": "Auth_ForgetPassword",
                "parameters": [
                    {
                        "name": "terminalId",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "userForgetPasswordInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserForgetPasswordInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/forgetPassword/verify": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Confirm the phone number with a verification code for recover password",
                "operationId": "Auth_VerifyForgetPassword",
                "parameters": [
                    {
                        "name": "terminalId",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "userVerifyForgetPasswordInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserVerifyForgetPasswordInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfirmPhoneNumberQuery"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/forgetPassword/resetPassword": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset forgotten password",
                "operationId": "Auth_ResetForgetPassword",
                "parameters": [
                    {
                        "name": "terminalId",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "userResetForgetPasswordInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetForgetPasswordInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Auth/register/device": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new Device for current user.",
                "operationId": "Auth_RegisterDevice",
                "parameters": [
                    {
                        "name": "terminalVersion",
                        "in": "header",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "terminalPlatformType",
                        "in": "header",
                        "schema": {
                            "nullable": true,
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/OsPlatformType"
                                }
                            ]
                        },
                        "x-position": 2
                    }
                ],
                "requestBody": {
                    "x-name": "registerInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterDeviceInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 3
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Bank": {
            "get": {
                "tags": [
                    "Bank"
                ],
                "summary": "Get available banks",
                "operationId": "Bank_Get",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BankQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/category": {
            "get": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Get Business categories",
                "operationId": "BusinessUser_GetBusinessCategory",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BusinessCategoryQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/invite": {
            "post": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Send a connection request to sub user\n[Feature just allowed for the business users]",
                "operationId": "BusinessUser_SendConnectionRequest",
                "requestBody": {
                    "x-name": "sendConnectionRequestInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendConnectionRequestInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubUserConnectionQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/invite/{invitationId}/resend": {
            "post": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Resend Connection Request to Sub-User\n[Feature just allowed for the business users]",
                "operationId": "BusinessUser_ResendConnectionRequest",
                "parameters": [
                    {
                        "name": "invitationId",
                        "in": "path",
                        "required": true,
                        "description": "Invitation Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubUserConnectionQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/invite/{invitationId}/remove": {
            "delete": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Remove an invitation\n[Feature just allowed for the business users]\n[Needs secure login]",
                "operationId": "BusinessUser_RemoveInvitation",
                "parameters": [
                    {
                        "name": "invitationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubUserConnectionQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/resend/{invitationId}": {
            "post": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Resend Connection Request to Sub-User\n[Feature just allowed for the business users]",
                "operationId": "BusinessUser_ResendConnectionRequestDeprecated",
                "parameters": [
                    {
                        "name": "invitationId",
                        "in": "path",
                        "required": true,
                        "description": "Invitation Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubUserConnectionQuery"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/connection/{invitationId}/remove": {
            "delete": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Remove an invitation\n[Feature just allowed for the business users]\n[Needs secure login]",
                "operationId": "BusinessUser_RemoveInvitationDeprecated",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "invitationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubUserConnectionQuery"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/connection": {
            "get": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Get the connections\n[Feature just allowed for the business users]",
                "operationId": "BusinessUser_GetConnections",
                "parameters": [
                    {
                        "name": "subUserConnectionStatus",
                        "in": "query",
                        "schema": {
                            "nullable": true,
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/SubUserConnectionStatus"
                                }
                            ]
                        },
                        "x-position": 1
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "defaults to 0",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "defaults to 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubUserConnectionQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/connection/active": {
            "get": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Get active connections ordered by Transactions count\n[Feature just allowed for the business users]",
                "operationId": "BusinessUser_GetActiveConnections",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "defaults to 0",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "defaults to 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubUserConnectionQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/connection/{id}": {
            "get": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Get the connection amounts report\n[Feature just allowed for the business users]\n[Needs secure login]",
                "operationId": "BusinessUser_GetSubUserConnectionDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Connection Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubUserConnectionAmountsReportQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Change sub user connection info\n[Feature just allowed for the business users]\n[Needs secure login]",
                "operationId": "BusinessUser_EditConnectionInfo",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Connection Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditConnectionInfoInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Disconnect sub user connection\n[Feature just allowed for the business users]\n[Needs secure login]",
                "operationId": "BusinessUser_DisconnectSubUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Connection Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubUserConnectionQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/connection/{id}/permission": {
            "get": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Get sub user permissions for accounts\n[Feature just allowed for the business users]\n[Needs secure login]",
                "operationId": "BusinessUser_GetSubUserPermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Connection Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubUserPermissionQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Set access to the account for sub user\n[Feature just allowed for the business users]\n[Needs secure login]",
                "operationId": "BusinessUser_SetAccountAccessForSubUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Connection Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetAccountAccessForSubUserInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/connection/{id}/permission/{accountId}": {
            "put": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Edit sub user permission for the account\n[Feature just allowed for the business users]\n[Needs secure token]",
                "operationId": "BusinessUser_EditSubUserPermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Connection Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "Id of Account to edit it's permissios",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 2
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditSubUserPermissionInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 3
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Remove access to the account for sub user\n[Feature just allowed for the business users]\n[Needs secure token]",
                "operationId": "BusinessUser_RemoveAccountAccessForSubUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Connection Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "Id of Account to delete it's permissios",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/connection/{id}/epay": {
            "get": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Get EPay Requests created by SubUser\n[Feature just allowed for the business users]\n[Needs secure login]",
                "operationId": "BusinessUser_GetEpayRequestsCreatedBySubUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "id of SubUserConnection",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "epayRequestStatus",
                        "in": "query",
                        "schema": {
                            "nullable": true,
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/EpayRequestStatus"
                                }
                            ]
                        },
                        "x-position": 3
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "pluginId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "plugin_ZhenicCustomerName",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "plugin_ZhenicCustomerNumber",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "plugin_ZhenicInvoiceNumber",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 9
                    },
                    {
                        "name": "plugin_ZhenicRialAmount",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 10
                    },
                    {
                        "name": "plugin_ZhenicDollarAmount",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 11
                    },
                    {
                        "name": "plugin_ZhenicDollarAmountRate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 12
                    },
                    {
                        "name": "plugin_ZhenicEuroAmount",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 13
                    },
                    {
                        "name": "plugin_ZhenicEuroAmountRate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 14
                    },
                    {
                        "name": "plugin_SepidarCustomerName",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 15
                    },
                    {
                        "name": "plugin_SepidarCustomerNumber",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 16
                    },
                    {
                        "name": "plugin_SepidarDocumentNumber",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 17
                    },
                    {
                        "name": "plugin_SepidarVoucherType",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 18
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "defaults to 0",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 19
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "defaults to 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EpayRequestQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/BusinessUser/connection/{id}/settlement": {
            "get": {
                "tags": [
                    "BusinessUser"
                ],
                "summary": "Get Settlement Requests created by a SubUser\n[Feature just allowed for the business users]\n[Needs secure login]",
                "operationId": "BusinessUser_GetSettlementRequestsCreatedBySubUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "id of SubUserConnection",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "minimumAmount",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "decimal",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "maximumAmount",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "decimal",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "defaults to 0",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "defaults to 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SettlementRequestQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/EpayRequest": {
            "get": {
                "tags": [
                    "EpayRequest"
                ],
                "summary": "Get user pay requests (and sub user authorized accounts pay requests)\n[Needs secure login]",
                "operationId": "EpayRequest_Get",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "epayRequestStatus",
                        "in": "query",
                        "schema": {
                            "nullable": true,
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/EpayRequestStatus"
                                }
                            ]
                        },
                        "x-position": 2
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "pluginId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "plugin_ZhenicCustomerName",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "plugin_ZhenicCustomerNumber",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "plugin_ZhenicInvoiceNumber",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "plugin_ZhenicRialAmount",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 9
                    },
                    {
                        "name": "plugin_ZhenicDollarAmount",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 10
                    },
                    {
                        "name": "plugin_ZhenicDollarAmountRate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 11
                    },
                    {
                        "name": "plugin_ZhenicEuroAmount",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 12
                    },
                    {
                        "name": "plugin_ZhenicEuroAmountRate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 13
                    },
                    {
                        "name": "plugin_SepidarCustomerName",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 14
                    },
                    {
                        "name": "plugin_SepidarCustomerNumber",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 15
                    },
                    {
                        "name": "plugin_SepidarDocumentNumber",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 16
                    },
                    {
                        "name": "plugin_SepidarVoucherType",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 17
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "defaults to 0",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 18
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "defaults to 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 19
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EpayRequestQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/EpayRequest/{id}": {
            "get": {
                "tags": [
                    "EpayRequest"
                ],
                "summary": "Get epay request detail based on Id",
                "operationId": "EpayRequest_GetDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "EpayRequest's Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewEpayRequestResultQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/EpayRequest/{token}/qrCode": {
            "get": {
                "tags": [
                    "EpayRequest"
                ],
                "summary": "Get QR code image file for epay request",
                "operationId": "EpayRequest_GetQrCode",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "description": "epay request token",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EpayRequest/pos/Qr/{accountNo}": {
            "get": {
                "tags": [
                    "EpayRequest"
                ],
                "operationId": "EpayRequest_GetPosLinkQr",
                "parameters": [
                    {
                        "name": "accountNo",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "decimal",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "subUserConId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/EpayRequest/forMe": {
            "get": {
                "tags": [
                    "EpayRequest"
                ],
                "summary": "Get pay requests that the user is one of its audiences.\n[Feature is not allowed for sub users]\n[Needs secure login]",
                "operationId": "EpayRequest_GetEpayRequestForUser",
                "parameters": [
                    {
                        "name": "applicantName",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "epayRequestStatus",
                        "in": "query",
                        "schema": {
                            "nullable": true,
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/EpayRequestStatus"
                                }
                            ]
                        },
                        "x-position": 4
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "defaults to 0",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "defaults to 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EpayRequestForUserQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/EpayRequest/{id}/task": {
            "post": {
                "tags": [
                    "EpayRequest"
                ],
                "summary": "Create a new task for executing the actions of epay request [Resend/Cancel]",
                "operationId": "EpayRequest_CreateTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "epayRequestTaskInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EpayRequestTaskInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/EpayRequest/audiences/recent": {
            "get": {
                "tags": [
                    "EpayRequest"
                ],
                "operationId": "EpayRequest_GetRecentAudiences",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContactApiModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/File": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Upload new file [Allowed files are images and pdf / Max Size: 3 MB]",
                "operationId": "File_Post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/File/{id}": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "Download a file.",
                "operationId": "File_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "file unique id",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/GroupTransfer/add": {
            "put": {
                "tags": [
                    "GroupTransfer"
                ],
                "summary": "[for Business users only]",
                "operationId": "GroupTransfer_Validate",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupTransferTargetValidationInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupTransferTargetValidationQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/GroupTransfer/import": {
            "post": {
                "tags": [
                    "GroupTransfer"
                ],
                "summary": "[for Business users only]",
                "operationId": "GroupTransfer_ValidateAll",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupTransferTargetValidationQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/GroupTransfer/export": {
            "post": {
                "tags": [
                    "GroupTransfer"
                ],
                "summary": "[for Business users only]",
                "operationId": "GroupTransfer_ExportToExcel",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GroupTransferTargetValidationQuery"
                                }
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/GroupTransfer/transfer": {
            "post": {
                "tags": [
                    "GroupTransfer"
                ],
                "summary": "[for Business users only]",
                "operationId": "GroupTransfer_GroupTransferMoney",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupTransferInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupTransferQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/GroupTransfer/commission": {
            "get": {
                "tags": [
                    "GroupTransfer"
                ],
                "summary": "Get commission amount for group transfer [for Business users only]",
                "operationId": "GroupTransfer_GetCommissionAmount",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommissionApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Notification/ia": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "operationId": "Notification_GetImportantActions",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ImportantActionApiModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Notification/ia/{notifId}": {
            "put": {
                "tags": [
                    "Notification"
                ],
                "operationId": "Notification_Post",
                "parameters": [
                    {
                        "name": "notifId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Plugin/{id}": {
            "get": {
                "tags": [
                    "Plugin"
                ],
                "operationId": "Plugin_GetInfo",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PluginApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Pos/{accountNo}": {
            "get": {
                "tags": [
                    "Pos"
                ],
                "summary": "Get epay request detail",
                "operationId": "Pos_GetDetail",
                "parameters": [
                    {
                        "name": "accountNo",
                        "in": "path",
                        "required": true,
                        "description": "Account Number",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "subUserConId",
                        "in": "query",
                        "description": "Subuser Connection Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PosLandingPageApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Pos/pay/{targetAccountNo}/wallet": {
            "post": {
                "tags": [
                    "Pos"
                ],
                "summary": "Pay POS link with Wallet",
                "operationId": "Pos_WalletPayment",
                "parameters": [
                    {
                        "name": "targetAccountNo",
                        "in": "path",
                        "required": true,
                        "description": "Target account number",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PosWalletPayInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReceiptApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Pos/pay/{targetAccountNo}/online": {
            "post": {
                "tags": [
                    "Pos"
                ],
                "summary": "Pay POS link Online",
                "operationId": "Pos_OnlinePayment",
                "parameters": [
                    {
                        "name": "targetAccountNo",
                        "in": "path",
                        "required": true,
                        "description": "Target account number",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PosOnlinePayInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewEpayRequestResultQuery"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Receipt/{token}": {
            "get": {
                "tags": [
                    "Receipt"
                ],
                "summary": "Get a receipt by it's id",
                "operationId": "Receipt_GetReceipt",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "description": "EpayRequest's token to get receipt for",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReceiptApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ResellerUser": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get the Resellership info of current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetInfo",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResellerApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/introduced/filterData": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get filter data items to populate DropDowns\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetFilterData",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReselledUserFilterData"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/introduced": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get the Users Introduced by current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetList",
                "parameters": [
                    {
                        "name": "searchInput",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "isActive",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "isPerson",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "identityStatuses",
                        "in": "query",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "nullable": true,
                            "items": {
                                "$ref": "#/components/schemas/IdentityStatus"
                            }
                        },
                        "x-position": 4
                    },
                    {
                        "name": "lastActivityFrom",
                        "in": "query",
                        "description": "YYYY-MM-DD",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "lastActivityTo",
                        "in": "query",
                        "description": "YYYY-MM-DD",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "registeredFrom",
                        "in": "query",
                        "description": "YYYY-MM-DD",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "registeredTo",
                        "in": "query",
                        "description": "YYYY-MM-DD",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 10
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 11
                    },
                    {
                        "name": "orderDesc",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "x-position": 12
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReselledUserApiModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/introduced/{userId}/activity": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get the User activity\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetUserActivity",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReselledUserActivityApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/dashboard/commission/sum": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get sum of all commissions paid to current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetCommissionAmountSum",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "takeDays",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "takeMonths",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "takeYears",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "fromMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "toMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AggregationReportQueryOfDecimal"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/dashboard/commission/report": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get the time-based report of commissions paid to current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetCommissionAmountReport",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "takeDays",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "takeMonths",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "takeYears",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "fromMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "toMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DateReportQueryOfDecimal"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/dashboard/links/count": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get count of all links generated by users, who are introduced by current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetGeneratedLinksCount",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "takeDays",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "takeMonths",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "takeYears",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "fromMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "toMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AggregationReportQueryOfInteger"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/dashboard/links/report": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get time-based report of links generated by users, who are introduced by current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetGeneratedLinksReport",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "takeDays",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "takeMonths",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "takeYears",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "fromMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "toMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DateReportQueryOfInteger"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/dashboard/links/paid/count": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get count of all paid links generated by users, who are introduced by current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetPaidLinksCount",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "takeDays",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "takeMonths",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "takeYears",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "fromMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "toMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AggregationReportQueryOfInteger"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/dashboard/links/paid/report": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get time-based report of paid links generated by users, who are introduced by current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetPaidLinksReport",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "takeDays",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "takeMonths",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "takeYears",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "fromMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "toMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DateReportQueryOfInteger"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/dashboard/transactions/count": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get count of all commission transactions, paid to current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetCommissionTransactionsCount",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "takeDays",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "takeMonths",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "takeYears",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "fromMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "toMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AggregationReportQueryOfInteger"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/dashboard/transactions/report": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get time-based report of commission transactions, paid to current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetCommissionTransactionsReport",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "takeDays",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "takeMonths",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "takeYears",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "fromMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "toMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DateReportQueryOfInteger"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/dashboard/introduced/count": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get count of all users reselled by current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetIntroducedUsersCount",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "takeDays",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "takeMonths",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "takeYears",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "fromMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "toMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AggregationReportQueryOfInteger"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/ResellerUser/dashboard/introduced/report": {
            "get": {
                "tags": [
                    "ResellerUser"
                ],
                "summary": "Get time-based report of users reselled by current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "ResellerUser_GetIntroducedUsersReport",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "takeDays",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "takeMonths",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "takeYears",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "fromMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    },
                    {
                        "name": "toMonth",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 8
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 9
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DateReportQueryOfInteger"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Service/NewEpayRequest": {
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Create an new [EpayRequest] with the given model.",
                "operationId": "Service_NewEpayRequest",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "ApiKey to authorize [User]",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "terminalId",
                        "in": "header",
                        "description": "Id of [Terminal] to use",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 2
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "description": "The request model to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EpayRequestServiceInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 3
                },
                "responses": {
                    "200": {
                        "description": "Payment Link and Request's Token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EpayRequestWcfResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Service/CheckEpayRequest": {
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Check the [EpayRequest] based on token",
                "operationId": "Service_CheckEpayRequest",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "ApiKey to authorize [User]",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "token",
                    "description": "Token of [EpayRequest] to check",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "Return [EpayRequest] status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EpayRequestCheckStatusResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Service/VerifyApiKey": {
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Verify the ApiKey for authorizing the [User]",
                "operationId": "Service_VerifyApiKey",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "ApiKey to authorize [User]",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A flag represents if the given ApiKey for [User] is valid or not.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Service/NewDivideEpayRequest": {
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Create a Divided [EpayRequest] for the given model.",
                "operationId": "Service_NewDivideEpayRequest",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "ApiKey to authorize [User]",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "terminalId",
                        "in": "header",
                        "description": "Id of [Terminal] to use.",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 2
                    }
                ],
                "requestBody": {
                    "x-name": "request",
                    "description": "The request model containing [EpayRequest]'s data to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DivideEpayRequestServiceInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 3
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EpayRequestWcfResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Service/UnblockAmount": {
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Unblock Amount of an Divided[EpayRequest]",
                "operationId": "Service_UnblockAmount",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "ApiKey to authorize [User]",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "description": "The request model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DividedEpayRequestUnblockInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "Unblocked Amount",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DividedEpayRequestUnblockResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Service/CancelAmount": {
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Cancel Amount of an Divided[EpayRequest]",
                "operationId": "Service_CancelAmount",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "ApiKey to authorize [User]",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "description": "The request model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DividedEpayRequestCancelInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "Canceled Amount",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DividedEpayRequestCancelResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Service/CancelPayment": {
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Set [EPayRequest] status to 'Cancel' and cancel the payment",
                "operationId": "Service_CancelPayment",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "ApiKey to authorize [User]",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "token",
                    "description": "Token of [EPayRequest]",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "Returns [True] if operation was successful or throw exception if failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SettlementRequest": {
            "get": {
                "tags": [
                    "SettlementRequest"
                ],
                "summary": "Get user settlement requests (or sub user authorized accounts settlement requests)",
                "operationId": "SettlementRequest_Get",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "minimumAmount",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "decimal",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "maximumAmount",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "decimal",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "defaults to 0",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "defaults to 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 7
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SettlementRequestQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/SubDomain/{subDomainAddress}": {
            "get": {
                "tags": [
                    "SubDomain"
                ],
                "summary": "Get info of a SubDomain by it's address.",
                "operationId": "SubDomain_GetByAddress",
                "parameters": [
                    {
                        "name": "terminalId",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "subDomainAddress",
                        "in": "path",
                        "required": true,
                        "description": "The SubDomain part of the url.\n            ",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubDomainApiModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SubDomain": {
            "get": {
                "tags": [
                    "SubDomain"
                ],
                "summary": "Get the SubDomain of current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "SubDomain_GetByUserId",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubDomainApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SubDomain"
                ],
                "summary": "Update the SubDomain of current Reseller user\n[Feature just allowed for Resellers]",
                "operationId": "SubDomain_UpdateSubDomain",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubDomainUpdateApiModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubDomainApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/SubUser/connection/{id}": {
            "delete": {
                "tags": [
                    "SubUser"
                ],
                "summary": "Disconnect business user connection\n[Feature just allowed for the sub users]\n[Needs secure login]",
                "operationId": "SubUser_DisconnectFromBusinessUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "connection id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessUserConnectionQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/SubUser/connection": {
            "get": {
                "tags": [
                    "SubUser"
                ],
                "summary": "Get the connections [Feature just allowed for the sub users]",
                "operationId": "SubUser_GetConnections",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BusinessUserConnectionQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/SubUser/account/{id}": {
            "get": {
                "tags": [
                    "SubUser"
                ],
                "operationId": "SubUser_GetSubUserAccountDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubUserAccountDetailQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/SubUser/notification/{id}": {
            "post": {
                "tags": [
                    "SubUser"
                ],
                "summary": "Enables/Disables sending notifications to current SubUser for transactions on specified Account [allowed for the SubUsers only]",
                "operationId": "SubUser_SetNotificationStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Account's Id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubUserNotificationStatusInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Transaction": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get user account transactions (sub user authorized accounts transactions)\n[Needs secure login]",
                "operationId": "Transaction_GetTransactions",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "transactionType",
                        "in": "query",
                        "schema": {
                            "nullable": true,
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/TransactionType"
                                }
                            ]
                        },
                        "x-position": 2
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "deprecated. use 'take' instead.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 5
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "defaults to 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 6
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionApiModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Transfer/search": {
            "get": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Get insensitive data of account owner",
                "operationId": "Transfer_Search",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        },
                        "x-position": 1
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 2
                    },
                    {
                        "name": "customerNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        },
                        "x-position": 3
                    },
                    {
                        "name": "accountNumber",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 4
                    },
                    {
                        "name": "contact",
                        "in": "query",
                        "description": "Phone number or email address",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 5
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsensitiveAccountApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Transfer/recent": {
            "get": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Get recent money transfers",
                "operationId": "Transfer_GetRecent",
                "parameters": [
                    {
                        "name": "take",
                        "in": "query",
                        "description": "defaults to 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransferMoneyApiModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Transfer/{accountId}/commission": {
            "get": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Get commission amount for transfer money amount",
                "operationId": "Transfer_GetCommission",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "x-position": 2
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommissionApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/Transfer/{accountId}": {
            "post": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Transfer money",
                "operationId": "Transfer_TransferMoney",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferMoneyInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferMoneyApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/UserBank": {
            "get": {
                "tags": [
                    "UserBank"
                ],
                "summary": "Get user banks\n[Feature is not allowed for sub users.]",
                "operationId": "UserBank_GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserBankQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserBank"
                ],
                "summary": "Create a new user bank\n[Feature is not allowed for sub users]\n[Needs secure login]",
                "operationId": "UserBank_Post",
                "requestBody": {
                    "x-name": "userBankInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserBankInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBankQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/UserBank/ready": {
            "get": {
                "tags": [
                    "UserBank"
                ],
                "summary": "Get available user banks\n[Feature is not allowed for sub users.]",
                "operationId": "UserBank_GetReady",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserBankQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/UserBank/{id}": {
            "get": {
                "tags": [
                    "UserBank"
                ],
                "summary": "get user bank detail\n[Needs secure login]",
                "operationId": "UserBank_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User bank id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBankDetailQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "UserBank"
                ],
                "summary": "Edit user bank\n[Needs secure login]",
                "operationId": "UserBank_Put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User bank id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "userBankInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserBankInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserBankQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/UserBank/{id}/changeVisibility": {
            "put": {
                "tags": [
                    "UserBank"
                ],
                "summary": "Change user bank show-in-list property\n[Needs secure login]",
                "operationId": "UserBank_ChangeVisibility",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "userBankChangeVisibilityInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserBankChangeVisibilityInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get [normal/sub/business] user profile detail",
                "operationId": "User_Get",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Edit profile [state, city, address]\n[Feature is not allowed for business users]\n[Needs secure login]",
                "operationId": "User_EditUserProfile",
                "requestBody": {
                    "x-name": "userProfileInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/contact/{input}": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "User_GetContact",
                "parameters": [
                    {
                        "name": "input",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "x-position": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/changeAvatar": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Change user avatar\n[Needs secure login]",
                "operationId": "User_EditUserProfileAvatar",
                "requestBody": {
                    "x-name": "userProfileAvatarInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileAvatarInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/identityRequest": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new national id verification request [Feature is not allowed for business users]",
                "operationId": "User_NewUserIdentityRequest",
                "requestBody": {
                    "x-name": "newUserIdentityRequestInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewUserIdentityRequestInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get last national id verification request [Feature is not allowed for business users]",
                "operationId": "User_UserIdentityRequest",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserIdentityRequestQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/changePhoneNumber": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change user phone number\n[Needs secure login]",
                "operationId": "User_ChangePhoneNumber",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserChangePhoneNumberInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/changePhoneNumber/verify": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Confirm the phone number with a verification code for change phone number",
                "operationId": "User_VerifyChangePhoneNumber",
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserVerifyChangePhoneNumberInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/changePassword": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change user password",
                "operationId": "User_ChangePassword",
                "requestBody": {
                    "x-name": "userChangePasswordInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserChangePasswordInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user profile summary",
                "operationId": "User_GetMe",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMeQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/upgradeToBusinessRequest": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Request for upgrade account to the business [Feature just allowed for the normal users]",
                "operationId": "User_NewUpgradeToBusinessRequest",
                "requestBody": {
                    "x-name": "upgradeToBusinessUserInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpgradeToBusinessUserInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 1
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpgradeToBusinessUserQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get Last Request for upgrade account to the business [Feature just allowed for the normal users]",
                "operationId": "User_UpgradeToBusinessRequest",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpgradeToBusinessUserQuery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/invitation/{id}/task": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new task for executing the actions of the business user invitation [Accept/Reject]\n[Feature is not allowed for sub users]",
                "operationId": "User_CreateInvitationTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "invitation id",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "subUserInvitationTaskInput",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubuserInvitationTaskInput"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/invitation": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get business user invitations for me [Feature is not allowed for sub users]",
                "operationId": "User_GetSubUserInvitation",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubUserInvitationQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/User/workspace": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user workspaces [Feature is not allowed for sub users]",
                "operationId": "User_GetUserworkspaces",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserWorkspaceQuery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/UserPlugin": {
            "get": {
                "tags": [
                    "UserPlugin"
                ],
                "operationId": "UserPlugin_Get",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserPluginInfoApiModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        },
        "/UserPlugin/{id}/ChangeStatus": {
            "put": {
                "tags": [
                    "UserPlugin"
                ],
                "operationId": "UserPlugin_ChangeStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-position": 1
                    }
                ],
                "requestBody": {
                    "x-name": "model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPluginTogggleApiModel"
                            }
                        }
                    },
                    "required": true,
                    "x-position": 2
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPluginApiModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWT token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AccountSummaryWithBalanceQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "intermediateUserBankBankId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "intermediateUserBankBankName": {
                        "type": "string",
                        "nullable": true
                    },
                    "intermediateUserBankAccountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "intermediateUserBankShebaNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "directUserBankBankId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "directUserBankBankName": {
                        "type": "string",
                        "nullable": true
                    },
                    "directUserBankAccountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "directUserBankShebaNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "relatedUserAccountIndex": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "getComissionFromPayer": {
                        "type": "boolean"
                    },
                    "totalBalance": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "realBalance": {
                        "type": "number",
                        "format": "decimal"
                    }
                }
            },
            "AccountDetailQuery": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AccountSummaryWithBalanceQuery"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "automaticSettlement": {
                                "type": "boolean"
                            },
                            "currencyType": {
                                "$ref": "#/components/schemas/CurrencyType"
                            },
                            "actionPolicies": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/ActionPolicyCommissionDetailQuery"
                                }
                            },
                            "accountQrCodeUrl": {
                                "type": "string",
                                "nullable": true
                            },
                            "posLinkUrl": {
                                "type": "string",
                                "nullable": true
                            },
                            "notificationEnabled": {
                                "type": "boolean"
                            },
                            "posScanCount": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "posPaidCount": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "permittedSubuserCount": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ]
            },
            "CurrencyType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Rial"
                ],
                "enum": [
                    "Rial"
                ]
            },
            "ActionPolicyCommissionDetailQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "AccountInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "userBankId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "getComissionFromPayer": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "automaticSettlement": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "currencyType": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyType"
                            }
                        ]
                    }
                }
            },
            "AccountNotificationStatusInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "notificationEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "AccountBalanceSummaryQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "totalBalance": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "realBalance": {
                        "type": "number",
                        "format": "decimal"
                    }
                }
            },
            "AccountPermittedSubUserQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "subuserId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "subUserTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserPositionTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserContact": {
                        "type": "string",
                        "nullable": true
                    },
                    "connectDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "disconnectDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "subuserStatus": {
                        "$ref": "#/components/schemas/SubuserStatus"
                    },
                    "subUserConnectionStatus": {
                        "$ref": "#/components/schemas/SubUserConnectionStatus"
                    },
                    "subuserStatusDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserAvatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "connectionId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "SubuserStatus": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Connected",
                    "DisconnectedByBusinessUser",
                    "DisconnectedBySubUser"
                ],
                "enum": [
                    "Connected",
                    "DisconnectedByBusinessUser",
                    "DisconnectedBySubUser"
                ]
            },
            "SubUserConnectionStatus": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Pending",
                    "Rejected",
                    "Connected",
                    "Disconnected",
                    "Deleted"
                ],
                "enum": [
                    "Pending",
                    "Rejected",
                    "Connected",
                    "Disconnected",
                    "Deleted"
                ]
            },
            "NewChargeRequestResultQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "paymentLink": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "NewChargeRequestInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "مبلغ شارژ",
                        "format": "decimal"
                    },
                    "callbackUrl": {
                        "type": "string",
                        "description": "آدرس بازگشت بعد از پرداخت",
                        "nullable": true
                    }
                }
            },
            "CommissionApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "comissionAmount": {
                        "type": "number",
                        "format": "decimal",
                        "deprecated": true,
                        "x-deprecatedMessage": "Use CommissionAmount instead."
                    },
                    "commissionAmount": {
                        "type": "number",
                        "format": "decimal"
                    }
                }
            },
            "NewEpayRequestResultQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "token": {
                        "type": "string",
                        "nullable": true
                    },
                    "createDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "pluginName": {
                        "type": "string",
                        "nullable": true
                    },
                    "pluginId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "userAccountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "userAccountName": {
                        "type": "string",
                        "nullable": true
                    },
                    "expireDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "getComissionByPayer": {
                        "type": "boolean"
                    },
                    "comissionAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "paymentLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "qrCodeLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "epayRequestStatus": {
                        "$ref": "#/components/schemas/EpayRequestStatus"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "epayRequestAudience": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/EPayRequestAudienceInput"
                        }
                    },
                    "epayRequestPluginSpecific": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/EpayRequestPluginSpecificOutput"
                        }
                    }
                }
            },
            "EpayRequestStatus": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Initiated",
                    "Paid",
                    "Cancelled",
                    "Expired",
                    "Viewed"
                ],
                "enum": [
                    "Initiated",
                    "Paid",
                    "Cancelled",
                    "Expired",
                    "Viewed"
                ]
            },
            "EPayRequestAudienceInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "fullName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contact": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EpayRequestPluginSpecificOutput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "pluginPropertyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "pluginPropertyPersianName": {
                        "type": "string",
                        "nullable": true
                    },
                    "pluginPropertyId": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "NewEpayRequestInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "مبلغ شارژ",
                        "format": "decimal"
                    },
                    "expireDays": {
                        "type": "integer",
                        "description": "تاریخ انتقضا لینک ایجاد شده",
                        "format": "int32"
                    },
                    "isAutoConfirm": {
                        "type": "boolean",
                        "description": "انتقال مستقیم به درگاه \n "
                    },
                    "callbackUrl": {
                        "type": "string",
                        "description": "آدرس بازگشت بعد از پرداخت",
                        "nullable": true
                    },
                    "callbackType": {
                        "description": "نوع ارجاع در هنگام ایجاد درخواست",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CallbackType"
                            }
                        ]
                    },
                    "description": {
                        "type": "string",
                        "description": "توضحیات درخواست (بابت)",
                        "nullable": true
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "description": "شماره فاکتور",
                        "nullable": true
                    },
                    "invoiceDate": {
                        "type": "string",
                        "description": "تاریخ فاکتور",
                        "format": "date-time",
                        "nullable": true
                    },
                    "audiences": {
                        "type": "array",
                        "description": "اطلاعات پرداخت کننده / ها",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/EPayRequestAudienceInput"
                        }
                    },
                    "pluginId": {
                        "type": "integer",
                        "description": "...",
                        "format": "int32",
                        "nullable": true
                    },
                    "pluginSpecifics": {
                        "type": "array",
                        "description": "...",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/EpayRequestPluginSpecificInput"
                        }
                    },
                    "getComissionByPayer": {
                        "type": "boolean",
                        "description": "نحوه دریافت کارمزد",
                        "nullable": true
                    }
                }
            },
            "CallbackType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "None",
                    "Redirect",
                    "RedirectWithPost",
                    "Call"
                ],
                "enum": [
                    "None",
                    "Redirect",
                    "RedirectWithPost",
                    "Call"
                ]
            },
            "EpayRequestPluginSpecificInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "pluginPropertyId": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SettlementRequestQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "accountName": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "bankId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bankName": {
                        "type": "string",
                        "nullable": true
                    },
                    "createDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "automaticSettlement": {
                        "type": "boolean"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SettlementRequestStatus"
                    },
                    "requestAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "comissionAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "finalAmount": {
                        "type": "number",
                        "format": "decimal"
                    }
                }
            },
            "SettlementRequestStatus": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Pending",
                    "Paid"
                ],
                "enum": [
                    "Pending",
                    "Paid"
                ]
            },
            "NewSettlementRequestInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "InsensitiveAccountApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "accountOwnerTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountOwnerAvatarUrl": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "TransferMoneyApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "domainCommissionAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "targetAccountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "targetAccountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "targetUserDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "targetUserAvatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "userAccountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "userAccountName": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "TransferMoneyInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "targetUserAccountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "NewTokenResult": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "token"
                ],
                "properties": {
                    "token": {
                        "type": "string",
                        "minLength": 1
                    },
                    "expires": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mustChangePassword": {
                        "type": "boolean"
                    }
                }
            },
            "ApiLoginInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "secretKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "apiKey": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "LoginInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "userName": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "TotpLoginInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "token": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "RequestTotpInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SubUserLoginInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "businessId": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            },
            "SecureLoginInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "password": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "RegisterNewUserQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            },
            "LanguageType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Fa",
                    "En"
                ],
                "enum": [
                    "Fa",
                    "En"
                ]
            },
            "OsPlatformType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Web",
                    "Android",
                    "Ios",
                    "Windows",
                    "PWA"
                ],
                "enum": [
                    "Web",
                    "Android",
                    "Ios",
                    "Windows",
                    "PWA"
                ]
            },
            "RegisterInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "deviceId": {
                        "type": "string",
                        "nullable": true
                    },
                    "deviceBrandName": {
                        "type": "string",
                        "nullable": true
                    },
                    "deviceOsVersion": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ConfirmPhoneNumberQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "token": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ConfirmPhoneNumberOrEmailInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "token": {
                        "type": "string",
                        "nullable": true
                    },
                    "subDomainId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    }
                }
            },
            "SetUserBasicInfoInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "token": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "nullable": true
                    },
                    "fullName": {
                        "type": "string",
                        "nullable": true
                    },
                    "introducerCode": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UserForgetPasswordInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UserVerifyForgetPasswordInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "token": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UserResetForgetPasswordInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "token": {
                        "type": "string",
                        "nullable": true
                    },
                    "newPassword": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "RegisterDeviceInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "deviceId": {
                        "type": "string",
                        "nullable": true
                    },
                    "deviceBrandName": {
                        "type": "string",
                        "nullable": true
                    },
                    "deviceOsVersion": {
                        "type": "string",
                        "nullable": true
                    },
                    "deviceToken": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BankQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "logoUrl": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BusinessCategoryQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/BusinessType"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BusinessType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Ads",
                    "Investment",
                    "Production",
                    "Trade",
                    "Software"
                ],
                "enum": [
                    "Ads",
                    "Investment",
                    "Production",
                    "Trade",
                    "Software"
                ]
            },
            "SubUserConnectionQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "invitationId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "connectDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "disconnectDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "requestDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "removeDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserAvatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserContact": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserPositionTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserConnectionStatus": {
                        "$ref": "#/components/schemas/SubUserConnectionStatus"
                    },
                    "connectionId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    }
                }
            },
            "SendConnectionRequestInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SubUserConnectionAmountsReportQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "paidEpayRequestCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paidEpayRequestAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "accountChargeRequestCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accountChargeRequestAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "settlementRequestCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "settlementRequestAmount": {
                        "type": "number",
                        "format": "decimal"
                    }
                }
            },
            "EditConnectionInfoInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "position": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SubUserPermissionQuery": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubUserActionPermission"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "accountId": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "accountTitle": {
                                "type": "string",
                                "nullable": true
                            },
                            "accountNumber": {
                                "type": "string",
                                "nullable": true
                            },
                            "totalBalance": {
                                "type": "number",
                                "format": "decimal"
                            },
                            "realBalance": {
                                "type": "number",
                                "format": "decimal"
                            }
                        }
                    }
                ]
            },
            "SubUserActionPermission": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "canAccessToAccount": {
                        "type": "boolean"
                    },
                    "canReceiveMoney": {
                        "type": "boolean"
                    },
                    "canSeeEpayRequests": {
                        "type": "boolean"
                    },
                    "canTransferMoney": {
                        "type": "boolean"
                    },
                    "canGroupTransferMoney": {
                        "type": "boolean"
                    },
                    "canSeeTransactions": {
                        "type": "boolean"
                    },
                    "canRequestSettlement": {
                        "type": "boolean"
                    },
                    "canChargeAccount": {
                        "type": "boolean"
                    },
                    "canSeeSettlementRequests": {
                        "type": "boolean"
                    }
                }
            },
            "SetAccountAccessForSubUserInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    }
                }
            },
            "EditSubUserPermissionInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "subUserPermissionType": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SubUserPermissionType"
                            }
                        ]
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "SubUserPermissionType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "CanReceiveMoney",
                    "CanSeeEpayRequests",
                    "CanTransferMoney",
                    "CanSeeTransactions",
                    "CanRequestSettlement",
                    "CanChargeAccount",
                    "CanSeeSettlementRequests",
                    "CanGroupTransferMoney"
                ],
                "enum": [
                    "CanReceiveMoney",
                    "CanSeeEpayRequests",
                    "CanTransferMoney",
                    "CanSeeTransactions",
                    "CanRequestSettlement",
                    "CanChargeAccount",
                    "CanSeeSettlementRequests",
                    "CanGroupTransferMoney"
                ]
            },
            "EpayRequestQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "createDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expireDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "expireDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "payDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "userAccountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "userAccountName": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymentLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "qrCodeLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "epayRequestStatus": {
                        "$ref": "#/components/schemas/EpayRequestStatus"
                    },
                    "epayRequestAudience": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/EPayRequestAudienceInput"
                        }
                    }
                }
            },
            "EpayRequestForUserQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "applicantName": {
                        "type": "string",
                        "nullable": true
                    },
                    "expireDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "canBeCanceled": {
                        "type": "boolean"
                    },
                    "paymentUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "epayRequestStatus": {
                        "$ref": "#/components/schemas/EpayRequestStatus"
                    }
                }
            },
            "EpayRequestTaskInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "epayRequestTaskType": {
                        "$ref": "#/components/schemas/EpayRequestTaskType"
                    }
                }
            },
            "EpayRequestTaskType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Resend",
                    "Cancel"
                ],
                "enum": [
                    "Resend",
                    "Cancel"
                ]
            },
            "ContactApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "fullName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contact": {
                        "type": "string",
                        "nullable": true
                    },
                    "audienceType": {
                        "$ref": "#/components/schemas/EpayRequestAudienceType"
                    },
                    "audienceTypeDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "userDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "userProfileImageLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "userProfileImageName": {
                        "type": "string",
                        "nullable": true
                    },
                    "userProfileImageUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    }
                }
            },
            "EpayRequestAudienceType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Default",
                    "PhoneNumber",
                    "Email",
                    "CustomerNumber"
                ],
                "enum": [
                    "Default",
                    "PhoneNumber",
                    "Email",
                    "CustomerNumber"
                ]
            },
            "FileUploadQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "uniqueId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "fileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "fileUrl": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "GroupTransferTargetValidationQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "identifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "userDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "userPhoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/GroupTransferTargetStatus"
                    },
                    "statusDescription": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "GroupTransferTargetStatus": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "InvalidIdentifier",
                    "Ok",
                    "Unregistered",
                    "BlockedAccount",
                    "InvalidAmount"
                ],
                "enum": [
                    "InvalidIdentifier",
                    "Ok",
                    "Unregistered",
                    "BlockedAccount",
                    "InvalidAmount"
                ]
            },
            "GroupTransferTargetValidationInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "identifier": {
                        "type": "string",
                        "description": "PhoneNumber or Account Number",
                        "nullable": true
                    }
                }
            },
            "GroupTransferQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "userAccountName": {
                        "type": "string",
                        "nullable": true
                    },
                    "userDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "voucherId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createDateDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "targets": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/GroupTransferTargetQuery"
                        }
                    }
                }
            },
            "GroupTransferTargetQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "accountName": {
                        "type": "string",
                        "nullable": true
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "userDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "userPhoneNumber": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "GroupTransferInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "userAccountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "targets": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/GroupTransferTargetInput"
                        }
                    }
                }
            },
            "GroupTransferTargetInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "identifier": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ImportantActionApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "createTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createTimeDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/NotificationType"
                    },
                    "level": {
                        "$ref": "#/components/schemas/NotificationLevel"
                    },
                    "closeable": {
                        "type": "boolean"
                    },
                    "dismissible": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    },
                    "dataId": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "NotificationType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Default",
                    "EPayRequestUnpaid",
                    "EPayRequestPaid",
                    "UserIdentityUnknown",
                    "UserIdentityApproved",
                    "UserIdentityRejected",
                    "UpgradeToBusinessApproved",
                    "UpgradeToBusinessRejected",
                    "UserBankApproved",
                    "UserBankRejected",
                    "SubUserInvitationApproved",
                    "SubUserInvitationRejected",
                    "SubUserInvitationSent"
                ],
                "enum": [
                    "Default",
                    "EPayRequestUnpaid",
                    "EPayRequestPaid",
                    "UserIdentityUnknown",
                    "UserIdentityApproved",
                    "UserIdentityRejected",
                    "UpgradeToBusinessApproved",
                    "UpgradeToBusinessRejected",
                    "UserBankApproved",
                    "UserBankRejected",
                    "SubUserInvitationApproved",
                    "SubUserInvitationRejected",
                    "SubUserInvitationSent"
                ]
            },
            "NotificationLevel": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Unknown",
                    "Default",
                    "Success",
                    "Info",
                    "Warning",
                    "Danger"
                ],
                "enum": [
                    "Unknown",
                    "Default",
                    "Success",
                    "Info",
                    "Warning",
                    "Danger"
                ]
            },
            "PluginApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "amountCalculationExpression": {
                        "type": "string",
                        "nullable": true
                    },
                    "logoFileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "logoFileUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "logoFileUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "properties": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PluginPropertyApiModel"
                        }
                    }
                }
            },
            "PluginPropertyApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "fieldType": {
                        "$ref": "#/components/schemas/FieldDisplayType"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "currencyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "isFilterable": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FieldDisplayType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "String",
                    "Text",
                    "Currency",
                    "Integer",
                    "Float",
                    "Boolean",
                    "List"
                ],
                "enum": [
                    "String",
                    "Text",
                    "Currency",
                    "Integer",
                    "Float",
                    "Boolean",
                    "List"
                ]
            },
            "PosLandingPageApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "domainId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "domainEnglishName": {
                        "type": "string",
                        "nullable": true
                    },
                    "domainPersianName": {
                        "type": "string",
                        "nullable": true
                    },
                    "domainLogoFileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "domainLogoFileUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "domainLogoFileUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "getCommissionFromPayer": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "userDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "userAvatarFileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "userAvatarFileUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "userAvatarFileUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "subUserDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserAvatarFileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserAvatarFileUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "subUserAvatarFileUrl": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ReceiptApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "callbackUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createDateDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "$ref": "#/components/schemas/EpayRequestType"
                    },
                    "typeDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "token": {
                        "type": "string",
                        "nullable": true
                    },
                    "shareUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "failed": {
                        "type": "boolean"
                    },
                    "failureMessage": {
                        "type": "string",
                        "nullable": true
                    },
                    "payerUserAccountId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "payerUserAccountName": {
                        "type": "string",
                        "nullable": true
                    },
                    "payerUserAccountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "targetUserDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "audiences": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/ReceiptAudienceApiModel"
                        }
                    }
                }
            },
            "EpayRequestType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Link",
                    "POS",
                    "Share",
                    "ShareWithBlock",
                    "Charge"
                ],
                "enum": [
                    "Link",
                    "POS",
                    "Share",
                    "ShareWithBlock",
                    "Charge"
                ]
            },
            "ReceiptAudienceApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "fullName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contact": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PosWalletPayInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "userAccountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    }
                }
            },
            "PosOnlinePayInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "terminalId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "subuserId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ResellerApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startDateDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "commissionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "commissionDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "commissionName": {
                        "type": "string",
                        "nullable": true
                    },
                    "commissionType": {
                        "$ref": "#/components/schemas/ComissionType"
                    },
                    "commissionTypeDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "commissionPercent": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "commissionFixedValue": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true
                    },
                    "commissionMaxValue": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true
                    },
                    "introduceLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "hasSubDomain": {
                        "type": "boolean"
                    }
                }
            },
            "ComissionType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Percentage",
                    "Fixed"
                ],
                "enum": [
                    "Percentage",
                    "Fixed"
                ]
            },
            "ReselledUserFilterData": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "identityStatuses": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DropDownResultOfIdentityStatus"
                            }
                        ]
                    }
                }
            },
            "DropDownResultOfIdentityStatus": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "items": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/DropDownResultItemOfIdentityStatus"
                        }
                    }
                }
            },
            "DropDownResultItemOfIdentityStatus": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "value": {
                        "$ref": "#/components/schemas/IdentityStatus"
                    },
                    "display": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "IdentityStatus": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "None",
                    "WatingForCheck",
                    "Checking",
                    "EditingRequired",
                    "Approved",
                    "Rejected"
                ],
                "enum": [
                    "None",
                    "WatingForCheck",
                    "Checking",
                    "EditingRequired",
                    "Approved",
                    "Rejected"
                ]
            },
            "ReselledUserApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "registerDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPerson": {
                        "type": "boolean"
                    },
                    "identityStatus": {
                        "$ref": "#/components/schemas/IdentityStatus"
                    },
                    "identityStatusDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "lastActivityDate": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ReselledUserActivityApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "commissionsPaidToResellerCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "commissionsPaidToResellerSum": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "generatedLinks": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paidGeneratedLinks": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AggregationReportQueryOfDecimal": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "decimal"
                    }
                }
            },
            "DateReportQueryOfDecimal": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "day": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "month": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "monthName": {
                        "type": "string",
                        "nullable": true
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AggregationReportQueryOfInteger": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "value": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "DateReportQueryOfInteger": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "day": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "month": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "monthName": {
                        "type": "string",
                        "nullable": true
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "EpayRequestWcfResult": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "requestToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymentUrl": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EpayRequestServiceInput": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "userId",
                    "amount"
                ],
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "guid",
                        "minLength": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiresAfterDays": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "callbackUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isAutoRedirect": {
                        "type": "boolean"
                    },
                    "domainId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "terminalId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "userAccountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "isAutoConfirm": {
                        "type": "boolean"
                    },
                    "callbackType": {
                        "$ref": "#/components/schemas/CallbackType"
                    },
                    "audiences": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/EPayRequestAudienceInput"
                        }
                    },
                    "getComissionFromPayer": {
                        "type": "boolean"
                    }
                }
            },
            "EpayRequestCheckStatusResult": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "requestStatus": {
                        "$ref": "#/components/schemas/EpayRequestStatus"
                    },
                    "bankReferenceId": {
                        "type": "string",
                        "nullable": true
                    },
                    "verifyDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "DivideEpayRequestServiceInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "divisions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/DivideEpayRequestShareModel"
                        }
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiresAfterDays": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "callBackUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isAutoRedirect": {
                        "type": "boolean"
                    },
                    "isBlocking": {
                        "type": "boolean"
                    }
                }
            },
            "DivideEpayRequestShareModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "dividerAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DividedEpayRequestUnblockResult": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "unblockedAmount": {
                        "type": "number",
                        "format": "decimal"
                    }
                }
            },
            "DividedEpayRequestUnblockInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "paymentToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "userApiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "dividerAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "userAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DividedEpayRequestCancelResult": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "cancelledAmount": {
                        "type": "number",
                        "format": "decimal"
                    }
                }
            },
            "DividedEpayRequestCancelInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "paymentToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "userApiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "dividerAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "userAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "shebaNo": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SubDomainApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "domainId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "persianName": {
                        "type": "string",
                        "nullable": true
                    },
                    "englishName": {
                        "type": "string",
                        "nullable": true
                    },
                    "subDomainAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "resellerUserId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "logoFileUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "logoFileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "logoFileUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "domainPersianName": {
                        "type": "string",
                        "nullable": true
                    },
                    "domainEnglishName": {
                        "type": "string",
                        "nullable": true
                    },
                    "resellerUserDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "about": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SubDomainUpdateApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "logoFileUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "about": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BusinessUserConnectionQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "businessId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "businessAvatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessName": {
                        "type": "string",
                        "nullable": true
                    },
                    "connectDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "disconnectDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "subUserConnectionStatus": {
                        "$ref": "#/components/schemas/SubUserConnectionStatus"
                    },
                    "connectionId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    }
                }
            },
            "SubUserAccountDetailQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountStatus": {
                        "$ref": "#/components/schemas/AccountStatus"
                    },
                    "accountStatusDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "accountQrCodeUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "notificationEnabled": {
                        "type": "boolean"
                    },
                    "posScanCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "posPaidCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "posLinkUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "canReceiveMoney": {
                        "type": "boolean"
                    },
                    "canTransferMoney": {
                        "type": "boolean"
                    },
                    "canSeeEpayRequests": {
                        "type": "boolean"
                    },
                    "canSeeTransactions": {
                        "type": "boolean"
                    },
                    "canRequestSettlement": {
                        "type": "boolean"
                    },
                    "canChargeAccount": {
                        "type": "boolean"
                    },
                    "canSeeSettlementRequests": {
                        "type": "boolean"
                    }
                }
            },
            "AccountStatus": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Block",
                    "OK"
                ],
                "enum": [
                    "Block",
                    "OK"
                ]
            },
            "SubUserNotificationStatusInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "notificationEnabled": {
                        "type": "boolean"
                    }
                }
            },
            "TransactionApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "accountId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "accountTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "createDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "remain": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "transactionType": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "transactionTypeDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "transactionOperationType": {
                        "$ref": "#/components/schemas/TransactionOperationType"
                    },
                    "transactionOperationTypeDisplay": {
                        "type": "string",
                        "nullable": true
                    },
                    "targetBusinessCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "targetBusinessCategoryName": {
                        "type": "string",
                        "nullable": true
                    },
                    "operationId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "voucherId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "TransactionType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Debt",
                    "Credit"
                ],
                "enum": [
                    "Debt",
                    "Credit"
                ]
            },
            "TransactionOperationType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Normal",
                    "ResellerCommission"
                ],
                "enum": [
                    "Normal",
                    "ResellerCommission"
                ]
            },
            "UserBankQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "identityType": {
                        "$ref": "#/components/schemas/BusinessShareType"
                    },
                    "bankId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bankName": {
                        "type": "string",
                        "nullable": true
                    },
                    "bankLogo": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "shebaNo": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/IdentityStatus"
                    },
                    "statusDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "isVisible": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BusinessShareType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Person",
                    "PrivateStock",
                    "PublicStock",
                    "Limited",
                    "GeneralPartnership",
                    "Institute",
                    "Cooperative"
                ],
                "enum": [
                    "Person",
                    "PrivateStock",
                    "PublicStock",
                    "Limited",
                    "GeneralPartnership",
                    "Institute",
                    "Cooperative"
                ]
            },
            "UserBankDetailQuery": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UserBankQuery"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "nationalCode": {
                                "type": "string",
                                "nullable": true
                            },
                            "documents": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                    "$ref": "#/components/schemas/DocumentQuery"
                                }
                            }
                        }
                    }
                ]
            },
            "DocumentQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "uniqueId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "fileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "fileTypes": {
                        "$ref": "#/components/schemas/FileTypes"
                    },
                    "createDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "documentContentType": {
                        "$ref": "#/components/schemas/DocumentContentType"
                    },
                    "fileUrl": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FileTypes": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Other",
                    "Image",
                    "Pdf"
                ],
                "enum": [
                    "Other",
                    "Image",
                    "Pdf"
                ]
            },
            "DocumentContentType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Other",
                    "UserBankVerification",
                    "IdentityCard",
                    "BusinessStatute",
                    "BusinessLatestChangesAnnouncement",
                    "BusinessOwnersIdentityCards",
                    "BusinessOwnersBirthCertificates"
                ],
                "enum": [
                    "Other",
                    "UserBankVerification",
                    "IdentityCard",
                    "BusinessStatute",
                    "BusinessLatestChangesAnnouncement",
                    "BusinessOwnersIdentityCards",
                    "BusinessOwnersBirthCertificates"
                ]
            },
            "UserBankInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "identityType": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BusinessShareType"
                            }
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "nationalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "bankId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "shebaNo": {
                        "type": "string",
                        "nullable": true
                    },
                    "documents": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/DocumentInput"
                        }
                    },
                    "isVisible": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "DocumentInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "fileUniqueId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "documentContentType": {
                        "$ref": "#/components/schemas/DocumentContentType"
                    }
                }
            },
            "UserBankChangeVisibilityInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "isVisible": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "UserDetailQuery": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/UserMeQuery"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "nationalCode": {
                                "type": "string",
                                "nullable": true
                            },
                            "state": {
                                "type": "string",
                                "nullable": true
                            },
                            "city": {
                                "type": "string",
                                "nullable": true
                            },
                            "address": {
                                "type": "string",
                                "nullable": true
                            },
                            "phoneNumber": {
                                "type": "string",
                                "nullable": true
                            },
                            "introducedBySubDomain": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "UserMeQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "profileImageLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "identityStatus": {
                        "$ref": "#/components/schemas/IdentityStatus"
                    },
                    "isBusinessUser": {
                        "type": "boolean"
                    },
                    "isResellerUser": {
                        "type": "boolean"
                    },
                    "isSubUser": {
                        "type": "boolean"
                    },
                    "shareCode": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "referredBy": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessName": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessUserId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    }
                }
            },
            "UserProfileInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UserProfileAvatarInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "fileUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    }
                }
            },
            "NewUserIdentityRequestInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "nationalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "documents": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/DocumentInput"
                        }
                    }
                }
            },
            "UserIdentityRequestQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "nationalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "documents": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/DocumentQuery"
                        }
                    },
                    "userIdentityRequestStatus": {
                        "$ref": "#/components/schemas/IdentityStatus"
                    },
                    "userIdentityRequestStatusDescription": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UserChangePhoneNumberInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UserVerifyChangePhoneNumberInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "token": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UserChangePasswordInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "currentPassword": {
                        "type": "string",
                        "nullable": true
                    },
                    "newPassword": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UpgradeToBusinessUserQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "businessName": {
                        "type": "string",
                        "nullable": true
                    },
                    "organizationName": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessLogoImageLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessLogoImageUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "organizationNationalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessType": {
                        "$ref": "#/components/schemas/BusinessType"
                    },
                    "userIdentityType": {
                        "$ref": "#/components/schemas/BusinessShareType"
                    },
                    "upgradeToBusinessRequestStatus": {
                        "$ref": "#/components/schemas/IdentityStatus"
                    },
                    "upgradeToBusinessRequestStatusDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "managerName": {
                        "type": "string",
                        "nullable": true
                    },
                    "managerPhoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "faxNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "webSiteUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "personNationalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "documents": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/DocumentQuery"
                        }
                    }
                }
            },
            "UpgradeToBusinessUserInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "logoFileUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "businessName": {
                        "type": "string",
                        "nullable": true
                    },
                    "organizationName": {
                        "type": "string",
                        "nullable": true
                    },
                    "organizationNationalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessType": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BusinessType"
                            }
                        ]
                    },
                    "userIdentityType": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BusinessShareType"
                            }
                        ]
                    },
                    "managerName": {
                        "type": "string",
                        "nullable": true
                    },
                    "managerPhoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "faxNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "webSiteUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "documents": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/DocumentInput"
                        }
                    }
                }
            },
            "SubuserInvitationTaskInput": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "subuserInvitationTaskType": {
                        "$ref": "#/components/schemas/SubuserInvitationTaskType"
                    }
                }
            },
            "SubuserInvitationTaskType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Accept",
                    "Reject"
                ],
                "enum": [
                    "Accept",
                    "Reject"
                ]
            },
            "SubUserInvitationQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "invitationId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "businessUserAvatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessUserTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "invitationDate": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UserWorkspaceQuery": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "businessUserId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "businessAvatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessName": {
                        "type": "string",
                        "nullable": true
                    },
                    "positionTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "workspaceType": {
                        "$ref": "#/components/schemas/WorkspaceType"
                    }
                }
            },
            "WorkspaceType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "User",
                    "SubUser"
                ],
                "enum": [
                    "User",
                    "SubUser"
                ]
            },
            "UserPluginInfoApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "userId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "userDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "pluginId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pluginName": {
                        "type": "string",
                        "nullable": true
                    },
                    "pluginConfig": {
                        "type": "string",
                        "nullable": true
                    },
                    "pluginAmountCalculationExpression": {
                        "type": "string",
                        "nullable": true
                    },
                    "pluginLogoFileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "pluginLogoFileUniqueId": {
                        "type": "string",
                        "format": "guid",
                        "nullable": true
                    },
                    "pluginLogoFileUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "properties": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PluginPropertyApiModel"
                        }
                    }
                }
            },
            "UserPluginApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "userId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "userDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "pluginConfig": {
                        "type": "string",
                        "nullable": true
                    },
                    "pluginName": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UserPluginTogggleApiModel": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    }
                }
            }
        },
        "securitySchemes": {
            "JWT token": {
                "type": "apiKey",
                "description": "Copy 'Bearer ' + valid JWT token into field",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "JWT token": []
        }
    ]
}